class Solution {
    
    void dfs(int i,int j,vector<vector<char>>& grid)
    {
        int m=grid.size(),n=grid[0].size();
    
        if(i>=0 and j>=0 and i<m and j<n and grid[i][j]=='1')
           {
              grid[i][j]='0'; 
            dfs(i+1,j,grid) ; 
            dfs(i-1,j,grid) ; 
            dfs(i,j+1,grid) ; 
            dfs(i,j-1,grid) ; 
            dfs(i+1,j+1,grid) ; 
            dfs(i-1,j-1,grid) ; 
            dfs(i+1,j-1,grid) ; 
            dfs(i-1,j+1,grid) ; 
            
           }
        
    }
    
  public:
    // Function to find the number of islands.
    int numIslands(vector<vector<char>>& grid) {
        int m=grid.size(),n=grid[0].size();
        int count=0;

        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]=='1')
                {
                    
                    dfs(i,j,grid);
                    count++;
                }
            }
        }
        return count;
    }
};
