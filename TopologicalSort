class Solution
{
	public:
void dfs(int vertex,vector<int> adj[],vector <bool> &visited,vector <int> &topsort)
    {
        
        visited[vertex]=true;
        
        
        for(auto i:adj[vertex])
        {
            if(visited[i]==false)
            dfs(i,adj,visited,topsort);
            
        }
        topsort.push_back(vertex);
    }


	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    vector<int> topsort;
	    vector<bool>visited(V,0);
	    for(int i=0;i<V;i++)
	    {
	        if(!visited[i])
	         dfs(i,adj,visited,topsort);
	    }
	    
	    reverse(topsort.begin(),topsort.end());
	    return topsort;
	}
};
